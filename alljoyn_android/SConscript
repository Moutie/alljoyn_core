# Copyright 2011-2013, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

Import('env')

# The return value is the collection of files installed in the build destination.
returnValue = []

# Install source
if env['OS'] == 'android':
    distDir = '$CPP_DISTDIR/alljoyn_android/bundle_test/BundledClient'
    returnValue += env.Install(distDir, 'bundle_test/BundledClient/AndroidManifest.xml')
    returnValue += env.Install(distDir, 'bundle_test/BundledClient/.classpath')
    returnValue += env.Install(distDir, 'bundle_test/BundledClient/.project')
    returnValue += env.Install(distDir, 'bundle_test/BundledClient/project.properties')
    returnValue += env.Install(distDir, Dir('bundle_test/BundledClient/src').srcnode())
    returnValue += env.Install(distDir, Dir('bundle_test/BundledClient/res').srcnode())

    distDir = '$CPP_DISTDIR/alljoyn_android/bundle_test/BundledService'
    returnValue += env.Install(distDir, 'bundle_test/BundledService/AndroidManifest.xml')
    returnValue += env.Install(distDir, 'bundle_test/BundledService/.classpath')
    returnValue += env.Install(distDir, 'bundle_test/BundledService/.project')
    returnValue += env.Install(distDir, 'bundle_test/BundledService/project.properties')
    returnValue += env.Install(distDir, Dir('bundle_test/BundledService/src').srcnode())
    returnValue += env.Install(distDir, Dir('bundle_test/BundledService/res').srcnode())
    
    distDir = '$CPP_DISTDIR/alljoyn_android/alljoyn_android_ext'
    returnValue += env.Install(distDir, 'alljoyn_android_ext/AndroidManifest.xml')
    returnValue += env.Install(distDir, 'alljoyn_android_ext/.classpath')
    returnValue += env.Install(distDir, 'alljoyn_android_ext/.project')
    returnValue += env.Install(distDir, 'alljoyn_android_ext/default.properties')
    returnValue += env.Install(distDir, Dir('alljoyn_android_ext/jni').srcnode())
    returnValue += env.Install(distDir, Dir('alljoyn_android_ext/src').srcnode())
    returnValue += env.Install(distDir, Dir('alljoyn_android_ext/res').srcnode())
    
#    distDir = '$CPP_DISTDIR/alljoyn_android/alljoyn_android_p2pservice'
#    returnValue += env.Install(distDir, 'alljoyn_android_p2pservice/AndroidManifest.xml')
#    returnValue += env.Install(distDir, 'alljoyn_android_p2pservice/.classpath')
#    returnValue += env.Install(distDir, 'alljoyn_android_p2pservice/.project')
#    returnValue += env.Install(distDir, 'alljoyn_android_p2pservice/default.properties')
#    returnValue += env.Install(distDir, Dir('alljoyn_android_p2pservice/jni').srcnode())
#    returnValue += env.Install(distDir, Dir('alljoyn_android_p2pservice/src').srcnode())
#    returnValue += env.Install(distDir, Dir('alljoyn_android_p2pservice/res').srcnode())
    
    distDir = '$CPP_DISTDIR/alljoyn_android/ice_client_login_service'
    returnValue += env.Install(distDir, 'ice_client_login_service/AndroidManifest.xml')
    returnValue += env.Install(distDir, 'ice_client_login_service/.classpath')
    returnValue += env.Install(distDir, 'ice_client_login_service/.project')
    returnValue += env.Install(distDir, 'ice_client_login_service/default.properties')
    returnValue += env.Install(distDir, Dir('ice_client_login_service/src').srcnode())
    returnValue += env.Install(distDir, Dir('ice_client_login_service/res').srcnode())

Return('returnValue')
