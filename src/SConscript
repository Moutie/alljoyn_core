# Copyright 2010 - 2011, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

Import('ajenv')
Import('common_objs')
from os.path import basename

# Need to clone the environment so that building a shared library does not
# cause a circular dependency.
libenv = ajenv.Clone()

# AllJoyn Sources
srcs = [ f for f in libenv.Glob('*.cc') + libenv.Glob('*.c')
         if not (str(f).endswith('version.cc')) ]

winrt_status_srcs = [ 'Status_CPP0x.cc', 'StatusComment.cc' ]
if libenv['OS_GROUP'] != 'winrt':
    srcs = [ f for f in srcs if basename(str(f)) not in winrt_status_srcs ]

# Platform specific sources
if libenv['OS'] == 'darwin':
    os_srcs = [ f for f in libenv.Glob(libenv['OS'] + '/*.cc') ]
else:
    os_srcs = [ f for f in libenv.Glob(libenv['OS_GROUP'] + '/*.cc') ]

    if libenv['OS'] == 'openwrt':
        os_srcs += [ f for f in libenv.Glob('posix/linux/*.cc')]
    else:
        os_srcs += [ f for f in libenv.Glob(libenv['OS_GROUP'] + '/' + libenv['OS'] + '/*.cc')]


alljoyn_core_objs = libenv.Object(srcs) + libenv.Object(os_srcs)
objs = common_objs + alljoyn_core_objs 

version_cc = libenv.GenVersion('version')
libenv.Depends(version_cc, objs)
objs.append(libenv.Object(version_cc))

alljoyn_core_objs.append(libenv.Object(version_cc))

if libenv['OS_GROUP'] == 'winrt':
    libs = None
    # winrt-specific build step
    alljoyn_core_objs.append(libenv.SConscript(libenv['OS_GROUP'] + '/SConscript', exports = ['libenv']));
else:
    # AllJoyn Static Library
    libs = libenv.StaticLibrary('alljoyn', objs)

Return ('libs','alljoyn_core_objs')
