# Copyright 2011, 2013, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

import os

Import('ajenv')
Import('core_headers')

docenv = ajenv.Clone()
docenv['ENV']['CPP_DISTDIR'] = str(docenv.Dir('$CPP_DISTDIR'))
docenv['ENV']['WINRT_DISTDIR'] = str(docenv.Dir('$WINRT_DISTDIR'))

installedDocs = None

# Build docs
if docenv['DOCS'] == 'html':
    # the target directory 'docs/tmp' is never built this will cause doxygen 
    # to run every time DOCS == 'html'
    generateDocs = docenv.Doxygen(source='Doxygen_html', target=[Dir('tmp'), Dir('html')])
    installedDocs = docenv.Install('$CPP_DISTDIR/docs', Dir('html'))
    docenv.Clean('Doxygen_html', Dir('html'))
    docenv.Depends(installedDocs, generateDocs)

elif docenv['DOCS'] == 'dev':
    # the target directory 'docs/tmp' is never built this will cause doxygen 
    # to run every time DOCS == 'html'
    generateDocs = docenv.Doxygen(source='Doxygen_dev', target=[Dir('tmp'), Dir('html')])
    installedDocs = docenv.Install('$CPP_DISTDIR/docs', Dir('html'))
    docenv.Clean('Doxygen_html', Dir('html'))
    docenv.Depends(installedDocs, generateDocs)

elif docenv['DOCS'] == 'pdf':
    # the target directory 'docs/tmp' is never built this will cause doxygen 
    # to run every time DOCS == 'pdf' making refman.tex a target makes sure this
    # command is run before building the pdf output.
    docenv.Doxygen(source='Doxygen_pdf', target=[Dir('tmp'), File('./latex/refman.tex')])
    #copy the custom style to the latex folder generated by doxygen.
    Command('./latex/quic.sty','./quic.sty',Copy("$TARGET", "$SOURCE"))
    output = docenv.PDF('./latex/refman.pdf', './latex/refman.tex')
    installedDocs = docenv.Install('$CPP_DISTDIR/pdf/alljoyn_api_manual.pdf', output)
    docenv.Clean('Doxygen_pdf', Dir('latex'))
    docenv.Depends(installedDocs, output)

elif docenv['DOCS'] == 'sandcastle':
    if not os.environ.has_key('SHFBROOT'):
        print 'Missing required environment build variable SHFBROOT'
        if not GetOption('help'):
            Exit()

    chm_env = docenv.Clone();

    # import the envrionment variable from the system
    shfbroot = chm_env.Dir(os.environ['SHFBROOT'])

    # choose the correct build flavor
    if chm_env['OS'] == 'win8' or chm_env['OS'] == 'win8_nt':
        if chm_env['CPU'] == 'x86':
            platform = 'Win32'
        elif chm_env['CPU'] == 'x86_64':
            platform = 'x64'
        elif chm_env['CPU'] == 'arm':
            platform = 'ARM'

        if chm_env['VARIANT'] == 'debug':
            variant = 'Debug'
        else:
            variant = 'Release'

        # Because SHFB expects a dll filename instead of the winmd,
        # make a copy, build the doc, then delete the temporary file
        chm_cmd = chm_env.Command('winrt/Help/AllJoyn.chm',
                            ['$DISTDIR/bin/AllJoyn.winmd', '$DISTDIR/bin/AllJoyn.xml'],
                            [
                            Copy('${SOURCE}.dll','${SOURCE}'),
                            ''.join([
                                    'cd alljoyn_core\\docs\\winrt && ',
                                    'msbuild.exe AllJoyn.shfbproj /t:Rebuild /p:',
                                    'Configuration=', variant,
                                    ';Platform=', platform,
                                    ';SHFBROOT="', shfbroot.path, '"'
                                    ]),
                            Delete('${SOURCE}.dll')
                            ]
                            )

        installedDocs = chm_env.Install('$DISTDIR/bin', 'winrt/Help/AllJoyn.chm')

        # make sure the chm file is built before trying to install it.
        Depends(installedDocs, chm_cmd)

elif docenv['DOCS'] == 'chm':
    chm_env = docenv.Clone();
    # the target directory 'docs/tmp' is never built this will cause doxygen
    # to run every time DOCS == 'chm'

    def always_decider(dependency, target, prev_ni):
        return 1

    chm_env.Decider(always_decider)
    chm_env.Doxygen(source='Doxygen_chm', target=File('html/AllJoyn.chm'))
    installedDocs = chm_env.Install('$WINRT_DISTDIR/docs', 'html/AllJoyn.chm')

if installedDocs:
    docenv.Depends(installedDocs, core_headers);


