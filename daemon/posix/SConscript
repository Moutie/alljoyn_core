# Copyright 2010 - 2011, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

Import('daemon_env', 'daemon_objs')

# Add OS specific daemon_objs
if daemon_env['ICE'] == 'on':
    os_objs = daemon_env.Object(['ProximityScanner.cc','Socket.cc'])
else:
    os_objs = []

# Build the posix daemon and service launcher helper.
if daemon_env['OS'] != 'darwin':
    daemon = daemon_env.Program('alljoyn-daemon', ['daemon-main.cc'] + daemon_objs + os_objs)
else:
    daemon = []
	
#
# On Android, build a static library that can be linked into a JNI dynamic 
# library to implement the daemon as a Service
#
if daemon_env['OS'] == 'android':
   libenv = daemon_env.Clone(CCFLAGS = '-DDAEMON_LIB')
   libenv.Object(target = 'alljoyn-daemon', source = 'daemon-main.cc')
   libdaemon = libenv.StaticLibrary(['alljoyn-daemon'] + daemon_objs + os_objs)
   dlibs = libenv.Install('$CPP_DISTDIR/lib', libdaemon)

#progs = daemon + servicehelper
progs = daemon, os_objs
Return('progs')
