# Copyright 2010 - 2013, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

Import('env', 'common_objs', 'alljoyn_core_objs')
from os.path import basename

daemon_env = env.Clone()

if daemon_env['OS'] == "darwin":
    # Darwin has its own version of the daemon transport
    srcs = [ f for f in daemon_env.Glob('*.cc') + daemon_env.Glob('*.c') + [daemon_env['OS'] + '/DaemonTransport.cc']]
else:
    srcs = [ f for f in daemon_env.Glob('*.cc') + daemon_env.Glob('*.c') + [daemon_env['OS_GROUP'] + '/DaemonTransport.cc']]

if daemon_env['OS'] != "android":
    srcs += [daemon_env['OS_GROUP'] + '/PermissionMgr.cc']

# scattergather sources
	
# bluetooth source files
bt_srcs = [ 'BTController.cc', 'BTTransport.cc', 'BTNodeDB.cc' ]

# basic daemon objects (excluding bluetooth)
base_srcs = [ f for f in srcs if basename(str(f)) not in bt_srcs ]
base_objs = daemon_env.Object(base_srcs)

# Add in various Name Service support
ns_srcs = daemon_env.SConscript('ns/SConscript', exports = ['daemon_env'])
base_objs.extend(daemon_env.Object(ns_srcs))

# Add in ICE support
daemon_env.Append(CPPPATH = [daemon_env.Dir('..').srcnode(), daemon_env.Dir('.').srcnode(), daemon_env.Dir('$OS_GROUP').srcnode()])
ice_srcs = daemon_env.SConscript('ice/SConscript', exports = ['daemon_env'])
base_objs.extend(daemon_env.Object(ice_srcs))
json_srcs = daemon_env.SConscript('JSON/SConscript', exports = ['daemon_env'])
base_objs.extend(daemon_env.Object(json_srcs))

# Add in P2P Helper support for Android only
if daemon_env['OS'] == "android":
    android_srcs = daemon_env.SConscript('android/SConscript', exports = ['daemon_env'])
    base_objs.extend(daemon_env.Object(android_srcs))

# Add in bluetooth support
if daemon_env['OS'] == 'darwin' or daemon_env['OS_GROUP'] in ['winrt', 'windows']:
    # bluetooth not supported on this platform
    daemon_objs = base_objs;
    pass
#elif daemon_env['OS_GROUP'] == "windows":
#    bt_srcs.extend(daemon_env.SConscript('bt_windows/SConscript'))
#    daemon_objs = base_objs + daemon_env.Object(bt_srcs)
#    daemon_env.AppendUnique(LIBS = ['Bthprops'])
else:
    # Use BlueZ
    bt_srcs.extend(daemon_env.SConscript('bt_bluez/SConscript', exports = ['daemon_env']))
    daemon_objs = base_objs + daemon_env.Object(bt_srcs)

# Bundled daemon object file
bdobj = daemon_env.SConscript('bundled/SConscript', exports = ['daemon_env'])

# AllJoyn Daemon
progs, os_objs = daemon_env.SConscript('${OS_GROUP}/SConscript', exports=['daemon_env', 'daemon_objs', 'common_objs', 'alljoyn_core_objs', 'bdobj'])
base_objs.extend(os_objs)

if daemon_env['OS'] != 'darwin':
    daemon_objs.extend(os_objs)

# Daemon library
if daemon_env['OS_GROUP'] != 'winrt':
    lib = daemon_env.StaticLibrary('ajdaemon', base_objs);
else:
    lib = []

# AllJoyn Daemon test programs
if daemon_env['OS_GROUP'] == 'winrt':
    tests = []
elif daemon_env['OS'] == 'darwin':
    if daemon_env['CPU'] in ['arm', 'armv7', 'armv7s']:
        print 'Not building unit tests for iOS...'    
        tests = []
    else:
        print 'Building unit tests for darwin...'
        tests = daemon_env.SConscript('test/SConscript', exports = ['daemon_env', 'daemon_objs'])
else:
    tests = daemon_env.SConscript('test/SConscript', exports = ['daemon_env', 'daemon_objs'])
    
# Return daemon and related tests
ret = progs + tests, lib, bdobj
Return('ret')
